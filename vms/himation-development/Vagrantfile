require_relative "../fibula"

Vagrant.configure(2) do |config|
  config.vm.define("himation-development") do |himation|

    himation.vm.box = "fibula/ubuntu-14.04"
    himation.vm.hostname = "himation-development"

    himation.vm.network "private_network", ip: Fibula.ip(:himation)
    himation.vm.network "forwarded_port", guest: Fibula.port(:himation, :assets), host: Fibula.port(:himation, :assets)
    himation.vm.network "forwarded_port", guest: Fibula.port(:himation, :site), host: Fibula.port(:himation, :site)

    himation.ssh.insert_key = false
    himation.ssh.private_key_path = Fibula.private_key_path
    himation.ssh.forward_agent = true
    himation.ssh.username = ENV["HIMATION_SSH_USER"]

    himation.vm.synced_folder *Fibula.sync_home_options

    himation.vm.synced_folder ENV.fetch("CYB_NFS_DIR_HIMATION"), "/var/cyb-himation",
      type: "nfs_guest",
      owner: Fibula.uid("himation"),
      group: Fibula.gid("himation"),
      map_uid: Fibula.uid("himation"),
      map_gid: Fibula.gid("himation"),
      unmount_options: ["-f"]

    himation.vm.provision "ansible" do |ansible|
      Fibula.configure_ansible_vault(ansible)
      ansible.playbook = Fibula.ansible_file("himation-development.yml")
      ansible.sudo = true
      ansible.verbose = "v"

      ansible.extra_vars = {
        himation_app_server: {
          host: Fibula.ip(:himation),
          port: Fibula.port(:himation, :site)
        },
        himation_asset_server: {
          host: Fibula.ip(:himation),
          port: Fibula.port(:himation, :assets)
        },
        himation_group_id: Fibula.gid("himation"),
        himation_user_id: Fibula.uid("himation"),
        himation_vagrant_ssh_key: File.read(ENV.fetch("CYB_VAGRANT_KEY_PUBLIC"))
      }
    end

    himation.vm.provider "virtualbox" do |vbox|
      vbox.cpus = 2
      Fibula.optimize_virtualbox_networking(vbox)
    end

  end
end
