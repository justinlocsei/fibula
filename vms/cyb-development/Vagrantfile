require_relative "../fibula"

CHITON = {
  db_data_dir: "/var/cyb-chiton-data",
  group: "chiton",
  group_id: 3000,
  host_home_dir: "/vagrant-host-home",
  ip: "10.10.10.20",
  ports: {
    api: 9002,
    db: 9003
  },
  source_dir: "/var/cyb-chiton",
  user: "chiton",
  user_id: 3000
}

HIMATION = {
  group: "himation",
  group_id: 2000,
  host_home_dir: "/vagrant-host-home",
  ip: "10.10.10.10",
  ports: {
    assets: 9001,
    site: 9000
  },
  source_dir: "/var/cyb-himation",
  user: "himation",
  user_id: 2000
}

Vagrant.configure(2) do |config|

  config.vm.define("himation-development") do |himation|

    himation.vm.box = "fibula/ubuntu-14.04"
    himation.vm.hostname = "himation-development"

    himation.vm.network "private_network", ip: HIMATION[:ip]
    himation.vm.network "forwarded_port", guest: HIMATION[:ports][:assets], host: HIMATION[:ports][:assets]
    himation.vm.network "forwarded_port", guest: HIMATION[:ports][:site], host: HIMATION[:ports][:site]

    himation.ssh.insert_key = false
    himation.ssh.private_key_path = Fibula.private_key_path
    himation.ssh.forward_agent = true
    himation.ssh.username = ENV["HIMATION_SSH_USER"]

    himation.vm.synced_folder *Fibula.sync_home_options(HIMATION[:host_home_dir])

    himation.vm.synced_folder ENV.fetch("CYB_NFS_DIR_HIMATION"), HIMATION[:source_dir],
      type: "nfs_guest",
      owner: HIMATION[:user_id],
      group: HIMATION[:group_id],
      map_uid: HIMATION[:user_id],
      map_gid: HIMATION[:group_id],
      unmount_options: ["-f"]

    himation.vm.provision "ansible" do |ansible|
      Fibula.configure_ansible_vault(ansible)
      ansible.playbook = Fibula.ansible_file("himation_development.yml")
      ansible.sudo = true
      ansible.verbose = "v"

      ansible.groups = {
        "himation_development" => "himation-development"
      }

      ansible.extra_vars = {
        himation_app_server: {
          host: HIMATION[:ip],
          port: HIMATION[:ports][:site]
        },
        himation_asset_server: {
          host: HIMATION[:ip],
          port: HIMATION[:ports][:assets]
        },
        himation_group: HIMATION[:group],
        himation_group_id: HIMATION[:group_id],
        himation_source_dir: HIMATION[:source_dir],
        himation_user: HIMATION[:user],
        himation_user_id: HIMATION[:user_id],
        himation_vagrant_ssh_key: File.read(ENV.fetch("CYB_VAGRANT_KEY_PUBLIC")),
        vagrant_host_group: HIMATION[:group],
        vagrant_host_home_dir: HIMATION[:host_home_dir],
        vagrant_host_user: HIMATION[:user]
      }
    end

    himation.vm.provider "virtualbox" do |vbox|
      vbox.cpus = 2
      Fibula.optimize_virtualbox_networking(vbox)
    end

  end

  config.vm.define("chiton-development") do |chiton|

    chiton.vm.box = "fibula/ubuntu-14.04"
    chiton.vm.hostname = "chiton-development"

    chiton.vm.network "private_network", ip: CHITON[:ip]
    chiton.vm.network "forwarded_port", guest: CHITON[:ports][:api], host: CHITON[:ports][:api]
    chiton.vm.network "forwarded_port", guest: CHITON[:ports][:db], host: CHITON[:ports][:db]

    chiton.ssh.insert_key = false
    chiton.ssh.private_key_path = Fibula.private_key_path
    chiton.ssh.forward_agent = true
    chiton.ssh.username = ENV["CHITON_SSH_USER"]

    chiton.vm.synced_folder *Fibula.sync_home_options(CHITON[:host_home_dir])

    chiton.vm.synced_folder ENV.fetch("CYB_NFS_DIR_CHITON"), CHITON[:source_dir],
      type: "nfs_guest",
      owner: CHITON[:user_id],
      group: CHITON[:group_id],
      map_uid: CHITON[:user_id],
      map_gid: CHITON[:group_id],
      unmount_options: ["-f"]

    chiton.vm.provision "ansible" do |ansible|
      Fibula.configure_ansible_vault(ansible)
      ansible.playbook = Fibula.ansible_file("chiton_development.yml")
      ansible.sudo = true
      ansible.verbose = "v"

      ansible.groups = {
        "chiton_development" => "chiton-development"
      }

      ansible.extra_vars = {
        chiton_db_port: CHITON[:ports][:db],
        chiton_group: CHITON[:group],
        chiton_group_id: CHITON[:group_id],
        chiton_server_address: CHITON[:ip],
        chiton_server_port: CHITON[:ports][:api],
        chiton_source_dir: CHITON[:source_dir],
        chiton_user: CHITON[:user],
        chiton_user_authorized_keys: [File.read(ENV.fetch("CYB_VAGRANT_KEY_PUBLIC"))],
        chiton_user_id: CHITON[:user_id],
        postgresql_server_data_dir: CHITON[:db_data_dir],
        vagrant_host_group: CHITON[:group],
        vagrant_host_home_dir: CHITON[:host_home_dir],
        vagrant_host_user: CHITON[:user]
      }
    end

    chiton.vm.provider "virtualbox" do |vbox|
      vbox.cpus = 2
      Fibula.optimize_virtualbox_networking(vbox)
    end

  end

end
