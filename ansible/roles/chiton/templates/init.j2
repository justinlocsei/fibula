#!/bin/sh

### BEGIN INIT INFO
# Provides:          chiton
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Chiton WSGI server
# Description:       Controls the chiton WSGI server
### END INIT INFO

. /lib/lsb/init-functions

GUNICORN="{{ chiton_gunicorn_bin }}"
GUNICORN_CONFIG="{{ chiton_gunicorn_config_file }}"
NAME=chiton
PIDFILE="{{ chiton_server_pidfile_path }}"
PIDFILE_CLONE="{{ chiton_server_pidfile_path }}.2"
USER="{{ chiton_user }}"
WSGI_MODULE="{{ chiton_wsgi_module }}"

is_running() {
  start-stop-daemon --status \
    --pidfile "$PIDFILE" \
    --user "$USER"
}

start() {
  if is_running; then
    echo "$NAME already running"
  else
    echo "Starting $NAME..."
    start-stop-daemon --start \
      --chuid "$USER" \
      --pidfile "$PIDFILE" \
      --startas "$GUNICORN" \
      --user "$USER" \
      -- \
      --daemon \
      --pid="$PIDFILE" \
      --config="$GUNICORN_CONFIG" \
      "$WSGI_MODULE"
  fi
}

stop() {
  echo "Stopping $NAME..."
  start-stop-daemon --stop \
    --pidfile "$PIDFILE" \
    --user "$USER" \
    --oknodo \
    --retry 30
}

reload() {
  if ! is_running; then
    start
    return
  fi

  master_pid=$(cat "$PIDFILE")
  old_workers=$(pgrep -P "$master_pid")

  echo "Spawning new arbiter..."
  kill -USR2 "$master_pid"
  while [ ! -f "$PIDFILE_CLONE" ]; do sleep 1; done

  echo "Shutting down old workers..."
  kill -WINCH "$master_pid"
  while [ "$(pgrep -P "$master_pid")" = "$old_workers" ]; do sleep 1; done

  echo "Promoting new arbiter..."
  kill -TERM "$master_pid"

  echo "$NAME reloaded"
}

restart() {
  stop
  start
}

status() {
  if is_running; then
    echo "$NAME is running"
  else
    echo "$NAME is not running"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  reload)
    reload
    ;;
  restart)
    restart
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $0 {start|stop|reload|restart|status}"
    exit 1
    ;;
esac

exit 0
