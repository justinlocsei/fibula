#!/bin/sh

### BEGIN INIT INFO
# Provides:          chiton
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Chiton WSGI server
# Description:       Controls the chiton WSGI server
### END INIT INFO

. /lib/lsb/init-functions

GROUP="{{ chiton_group }}"
GUNICORN="{{ chiton_gunicorn_bin }}"
GUNICORN_CONFIG="{{ chiton_gunicorn_config_file }}"
PIDFILE="{{ chiton_server_pidfile_path }}"
PIDFILE_SLAVE="{{ chiton_server_pidfile_slave_path }}"
RAINBOW_SADDLE="{{ chiton_rainbow_saddle_bin }}"
USER="{{ chiton_user }}"

start() {
  if [ ! -f "$PIDFILE_SLAVE" ]; then
    touch "$PIDFILE_SLAVE"
    chown "$USER:$GROUP" "$PIDFILE_SLAVE"
    chmod 600 "$PIDFILE_SLAVE"
  fi

  start-stop-daemon --start \
    --background \
    --pidfile "$PIDFILE" \
    --user "$USER" \
    --chuid "$USER:$GROUP" \
    --startas "$RAINBOW_SADDLE" \
    -- \
    --pid "$PIDFILE" \
    --gunicorn-pidfile "$PIDFILE_SLAVE" \
    "$GUNICORN" --config "$GUNICORN_CONFIG" "{{ chiton_wsgi_module }}"
}

stop() {
  start-stop-daemon --stop \
    --pidfile "$PIDFILE" \
    --user "$USER" \
    --oknodo \
    --retry 30 \
    --chuid "$USER:$GROUP"
}

reload() {
  start-stop-daemon --stop \
    --pidfile "$PIDFILE" \
    --user "$USER" \
    --signal HUP \
    --chuid "$USER:$GROUP"

  if [ $? = 1 ]; then
    start
  fi
}

restart() {
  stop
  start
}

status() {
  start-stop-daemon --status \
    --pidfile "$PIDFILE" \
    --user "$USER" \
    --chuid "$USER:$GROUP"

  if [ $? = 0 ]; then
    echo "Running"
  else
    echo "Not running"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  reload)
    reload
    ;;
  restart)
    restart
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $0 {start|stop|reload|restart|status}"
    exit 1
    ;;
esac

exit 0
