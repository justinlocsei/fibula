---
- set_fact:
    chiton_ssl_certificate_path: "{{ nginx_certs_dir }}/chiton.crt"
    when: cyb_wildcard_ssl_certificate is not none
    no_log: yes

- set_fact:
    chiton_ssl_certificate_key_path: "{{ nginx_certs_dir }}/chiton.key"
    when: cyb_wildcard_ssl_certificate_key is not none
    no_log: yes

- set_fact:
    chiton_nginx_site_config: "{{ nginx_sites_dir }}/chiton.conf"
    chiton_monit_config: "{{ monit_configs_dir }}/chiton.conf"

- name: grant nginx access to the chiton socket
  user:
    name: "{{ nginx_user }}"
    groups: "{{ chiton_group }}"
    append: yes

- name: create a file for the SSL certificate
  copy:
    dest: "{{ chiton_ssl_certificate_path }}"
    content: "{{ cyb_wildcard_ssl_certificate | require_value }}"
    owner: root
    group: root
    mode: 0600
  no_log: yes
  notify:
    - reload nginx

- name: create a file for the SSL private key
  copy:
    dest: "{{ chiton_ssl_certificate_key_path }}"
    content: "{{ cyb_wildcard_ssl_certificate_key | require_value }}"
    owner: root
    group: root
    mode: 0600
  no_log: yes
  notify:
    - reload nginx

- name: check if the site config exists
  stat:
    path: "{{ chiton_nginx_site_config }}"
  register: chiton_nginx_site_config_check

- name: create the nginx site config
  template:
    src: site.conf.j2
    dest: "{{ chiton_nginx_site_config }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx

- name: apply a new site config
  service:
    name: nginx
    state: restarted
  when: chiton_nginx_site_config_check.stat.isreg is not defined

- name: create a monit config
  template:
    src: monit.conf.j2
    dest: "{{ chiton_monit_config }}"
    mode: 0600
    owner: "{{ monit_user }}"
    group: "{{ monit_group }}"
  register: chiton_create_monit_config
  when: chiton_daemonize
  notify:
    - reload monit

- name: delete the monit config
  file:
    path: "{{ chiton_monit_config }}"
    state: absent
  register: chiton_delete_monit_config
  when: not chiton_daemonize
  notify:
    - reload monit
