---
- name: create the nginx worker group
  group:
    name: "{{ nginx_group }}"
    state: present

- name: create the nginx worker user
  user:
    name: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    comment: "nginx worker user"
    system: yes
    state: present

- name: create the data directory
  file:
    path: "{{ nginx_data_dir }}"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: update the default environment for the nginx worker user
  template:
    src: default.j2
    dest: /etc/default/nginx
    owner: root
    group: root
    mode: 0644
  notify:
    - restart nginx

- name: add the nginx package repository's key
  apt_key:
    url: http://nginx.org/keys/nginx_signing.key
    state: present

- name: add the nginx package repository
  apt_repository:
    repo: deb http://nginx.org/packages/mainline/ubuntu/ {{ ansible_distribution_release }} nginx
    state: present

- name: install nginx
  apt:
    name: "nginx={{ nginx_version }}*"
    state: present

- name: create a directory for storing SSL certificates
  file:
    path: "{{ nginx_certs_dir }}"
    owner: root
    group: root
    mode: 0700
    state: directory

- name: create a strong Diffie-Hellman parameter
  command: openssl dhparam -out {{ nginx_dhparam_pem | quote }} 2048
  args:
    creates: "{{ nginx_dhparam_pem }}"
  become: yes
  become_user: root

- name: remove default site configurations
  file:
    path: "{{ nginx_sites_dir }}/{{ item }}"
    state: absent
  with_items:
    - default.conf
    - example_ssl.conf

- name: use a custom configuration file
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_config_dir }}/nginx.conf"
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx

- name: create a configuration for the internal status page
  template:
    src: status.conf.j2
    dest: "{{ nginx_sites_dir }}/status.conf"
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx
